const int con_glo_int0 = 1, con_glo_int1 = 2;
const char con_glo_char0 = 'a', con_glo_char1 = 'b';
int var_glo_int0, var_glo_int1, var_glo_intA[10];
char var_glo_char0, var_glo_char1, var_glo_charA[20];
int ret_val(int a, int b, int c, int d, int e, int f){
    int ab;
    return (a + b);
}
char ret_char(){
    return ('h');
}
int Fib(int n)
{
    if( n < 1 )
    {
        return (-1);
    }
    if(n == 1)
    {
        return (1);
    }
    else 
    if (n == 2)
    {
        return (1);
    }
    return (Fib(n - 1)+Fib(n - 2));
}
void hanoi(int i,char x,char y,char z){ 
  if(i == 1){ 
    printf(x);
    printf("->");
    printf(z);
    printf("\n"); 
  }else{ 
    hanoi(i - 1,x,z,y); 

    printf(x);
    printf("->");
    printf(z);
    printf("\n"); 

    hanoi(i - 1,y,x,z); 
  } 
} 
void ret_none(int a, char b){
    return ;
}
void ret_no_para(){
    return ;
}
void main(){
    const int con_loc_int0 = 1, con_loc_int1 = 2;
    const char con_loc_char0 = 'a', con_loc_char1 = 'b';
    int var_loc_int0, var_loc_int1;
    int var_loc_intA[10], var_loc_int_input, times;
    char var_loc_char0, var_loc_char1;
    char var_loc_charA[20], var_loc_char_input;
    int a, b;
    var_loc_int0 = 1; var_loc_int1 = 0;
    if (var_loc_int0 < var_loc_int1) {
        printf("_abcde");
    }
    if (var_loc_int0 > var_loc_int1){
        printf("ABCDE");
    }
    else{
        Fib(5);
    }
    
    times = 2;
    while (var_loc_int0 <= times) {
        var_loc_int0 = var_loc_int0 + 1;
    }
    {
        if (var_loc_int0 >= 5){
            var_glo_int1 = -2;
            var_loc_intA[-var_loc_int1] = var_loc_int1;
            var_loc_intA[1] = var_loc_intA[2];
            var_glo_int1 = 15 * -20;
            var_glo_int0 = ret_val(1, 2) + (var_loc_int0 + var_loc_int1);
        }
        else 
        if(var_loc_int0 != var_loc_int1){
            ret_none(1, '_');
        }
        else 
        if (var_loc_int0 == var_loc_int1){
            ret_no_para();
        }
    }
    ret_val(var_loc_int0, var_loc_int1);
    ret_none(5, 'a');
    var_glo_int1 = 1 + 2;
    var_glo_intA[1 * 2] = var_loc_int0 + var_loc_int1;
    scanf(a, b);
    printf("%d\n", var_loc_int0 + 2);
    printf("you are the best\n");
     ;
    
    var_loc_int_input = 5;
    var_loc_intA[0] = 1;
    switch (var_loc_intA[0]){
        case 1:
            var_loc_int_input = var_loc_intA[1] - 0;
        case 2:
            var_loc_int0 = var_glo_int0 / 1;
        case 3:
            var_loc_int_input = +var_loc_int_input - 0;
        case 4:
            var_loc_int_input = -var_loc_int_input - 0;
        case 5:
            var_loc_int_input = var_loc_int_input * 0;
        case 6:
            var_loc_int_input = var_loc_int_input / 1;
        case 7:
            var_loc_int_input = var_loc_intA[0] * Fib(5);
        case 8:
            var_loc_int_input = var_loc_int_input - (5 - 12 * 16);
        case 9:
            var_loc_int_input = var_loc_int_input - 0;
        case 0:
            var_loc_int_input = var_loc_int_input - 0;
        
        default:
            ret_no_para();
        

    }
    var_loc_charA[0] = '+';
    switch (var_loc_charA[0]){
        case '/':
            var_loc_int_input = var_loc_int_input - 0;
        case 'a':
            var_loc_int0 = var_glo_int0 / 1;
        case '3':
            var_loc_int_input = var_loc_int_input - 0;
        default:
            ret_none(1 + 2, 'b');

    }
    return ;
}

